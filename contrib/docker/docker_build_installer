#!/bin/sh
export ERRBOT_ROOT=/opt/errbot
export ERRBOT_USER=errbot

set -euo pipefail
set -x

function setup_account
{
    echo -e "\e[93mUser/Group\e[0m"
    addgroup ${ERRBOT_USER}
    adduser --ingroup ${ERRBOT_USER} --home "${ERRBOT_ROOT}" --shell "/bin/false" "${ERRBOT_USER}"
    addgroup ${ERRBOT_USER} ${ERRBOT_USER}
    chown -R ${ERRBOT_USER}:${ERRBOT_USER} ${ERRBOT_ROOT}
    id ${ERRBOT_USER}
    ls -ld ${ERRBOT_ROOT}
}

function install_prod_packages
{
    echo -e "\e[93mProduction Packages\e[0m"
    apt update
    apt install -y python3.10 python3.10-venv git openssl rsync
}

function install_build_packages
{
    echo -e "\e[93mBuild Packages\e[0m"
    install_prod_packages
    apt install -y gcc python3-dev libssl-dev libffi-dev python3.10-venv
   #python3 -m ensurepip # disabled on ubuntu/debian systems
    #~ rm -r /usr/lib/python*/ensurepip
    #~ test ! -e /usr/bin/pip && ln -s pip3 /usr/bin/pip
    #~ test ! -e /usr/bin/python && ln -sf /usr/bin/python3 /usr/bin/python
    #~ test -d /root/.cache && rm -r /root/.cache || true
}

function install_openssh
{
    echo -e "\e[93mInstall OpenSSH server\e[0m"
    apt install -y openssh-server
    ssh-keygen -b 4096 -t ed25519 -f /etc/ssh/ssh_host_ed25519_key
    echo 'PermitRootLogin yes' >> /etc/ssh/sshd_config
}

function setup_virtual_env
{
    echo -e "\e[93mVirtual Environment\e[0m"
    python3.10 -m venv ${ERRBOT_ROOT}
    source ${ERRBOT_ROOT}/bin/activate
}

function install_plugin
{
    GIT_URL="$(echo ${1} | cut -d@ -f1)"
    GIT_BRANCH="$(echo ${1} | cut -d@ -f2)"
    PLUGIN_DIR="$(basename ${GIT_URL} | cut -d. -f1)"
    cd ${ERRBOT_ROOT}/plugins
    git clone $GIT_URL
    cd $PLUGIN_DIR
    git checkout $GIT_BRANCH
    pip install -r requirements.txt
}

function install_backend
{
    GIT_URL="$(echo ${1} | cut -d@ -f1)"
    GIT_BRANCH="$(echo ${1} | cut -d@ -f2)"
    BACKEND_DIR="$(basename ${GIT_URL} | cut -d. -f1)"
    cd ${ERRBOT_ROOT}/backends
    git clone $GIT_URL
    cd $BACKEND_DIR
    git checkout $GIT_BRANCH
    pip install -r requirements.txt
}

function initialise_errbot
{
    echo -e "\e[93mErrbot initialisation\e[0m"
    cd ${ERRBOT_ROOT}
    errbot --init
    rm -rf /opt/errbot/plugins/err-example
}

function install_errbot
{
    echo -e "\e[93mErrbot plugins installation\e[0m"
    source ${ERRBOT_ROOT}/bin/activate
    apt install -y python3.10-venv
    pip3 install --upgrade pip setuptools
    INSTALL_LIST=(
        errbot==6.2.0
        slixmpp
        IRC
        errbot-backend-slackv3
        err-backend-mattermost
        err-backend-discord
        'git+https://github.com/nzlosh/err-stackstorm.git'
        'git+https://github.com/nzlosh/err-backend-rocketchat.git@maint_nzlosh'
        'git+https://github.com/nzlosh/err-backend-gitter.git@maint_nzlosh'
    )
    for pip_tgt in ${INSTALL_LIST[@]}
    do
        pip install --upgrade "$pip_tgt"
    done
    initialise_errbot
    for dirname in plugins backends log
    do
        mkdir -p ${ERRBOT_ROOT}/${dirname}
    done
}

function cleanup
{
    test -f /root/docker_build_installer && rm /root/docker_build_installer
}

function stage1_build
{
    setup_account
    install_build_packages
    setup_virtual_env
    install_errbot
}

function stage2_build
{
    setup_account
    install_prod_packages
    #install_openssh
}

if [ "$1" == "stage1" ]
then
    stage1_build
else
    stage2_build
    cleanup
fi
